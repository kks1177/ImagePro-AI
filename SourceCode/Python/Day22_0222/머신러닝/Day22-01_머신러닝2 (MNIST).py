# Day22-01_머신러닝2 (MNIST).py
# *********************** < 모든 인공지능 처리 과정 절차 > *************************
# 0. 데이터 준비 --> 150건
# 1. (중요!) 학습용 데이터와 테스트(=모의고사)용 데이터를 분리
# 2. 학습 방법을 결정 (=머신 러닝 알고리즘을 선택) --> 다양함, Knn, SVM, SVC .....
# 3. 학습(=훈련) 시키기 --> 오래 걸림 --> 모델(=인공지능) 생성       # 모델 : 빈 머리
# 4. 모델의 정답률 구하기 (모의고사 시험)
# (5. 정답을 모르는 데이터를 가지고 예측! 해보기)
# *****************************************************************************
# MNIST. 머신러닝 프로젝트
# KNN 알고리즘


from sklearn.neighbors import KNeighborsClassifier      # KNN 알고리즘              # 머신러닝 : 암기
from sklearn.neural_network import MLPClassifier        # 다층 신경망 (딥러닝!!)     # 딥러닝 : 이해

from sklearn import metrics, utils
import pandas as pd         # .csv 또는 엑셀 파일 처리가 편리

# 0. 데이터(=문제집) 준비 --> 150건
df = pd.read_csv('csvFile/train_1k.csv')    # DataFrame == 2차원 배열 == 워크시트
df = utils.shuffle(df)          # (중요!) .csv에 있는 데이터를 섞어줌

# 1. (중요!) 학습용 데이터와 테스트(=모의고사)용 데이터를 분리
dataLen = df.shape[0]       # 데이터 개수 (150)
trainSize = int(dataLen * 0.8)      # 80%는 훈련용      # 0.8 은 조절 가능, But, 8:2 정도가 적당
testSize = dataLen - trainSize      # 20%는 테스트용

train_data = df.iloc[0:trainSize, 1:]     # 학습용 문제집
train_label = df.iloc[0:trainSize, [0]]    # 학습용 정답지
test_data = df.iloc[trainSize:, 1:]       # 테스트용 문제집
test_label = df.iloc[trainSize:, [0]]      # 테스트용 정답지

# 2. 학습 방법을 결정 (=머신 러닝 알고리즘을 선택) --> 다양함, Knn, SVM, SVC .....
print(" < MLP 알고리즘 > ")
#clf = KNeighborsClassifier(n_neighbors=3)
clf = MLPClassifier()

# 3. 학습(=훈련) 시키기 --> 오래 걸림 --> 모델(=인공지능) 생성       # 모델 : 빈 머리
clf.fit(train_data, train_label)        # 학습 (=훈련)

# 4. 모델의 정답률 구하기 (모의고사 시험)
results = clf.predict(test_data)      # 테스트 문제만 제공
score = metrics.accuracy_score(results, test_label)      # 테스트 문제 푼 것에 대한 점수 리턴
print("정답률 : %5.2f" % score)

# (5. 정답을 모르는 데이터를 가지고 예측! 해보기)
# 내가 손으로 쓴 숫자를 스캔해서 28x28로 변환       # 가장 앞 인덱스(2) 하나 지우기
myNumber = [0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,25,100,122,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,151,208,252,252,252,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,152,244,252,253,224,211,252,232,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,152,239,252,252,252,216,31,37,252,252,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,252,252,252,252,217,29,0,37,252,252,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,181,252,252,220,167,30,0,0,77,252,252,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,128,58,22,0,0,0,0,100,252,252,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,252,252,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,121,122,121,202,252,194,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,53,179,253,253,255,253,253,228,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,54,227,252,243,228,170,242,252,252,231,117,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,78,252,252,125,59,0,18,208,252,252,252,252,87,7,0,0,0,0,0,0,0,0,0,0,0,0,5,135,252,252,180,16,0,21,203,253,247,129,173,252,252,184,66,49,49,0,0,0,0,0,0,0,0,3,136,252,241,106,17,0,53,200,252,216,65,0,14,72,163,241,252,252,223,0,0,0,0,0,0,0,0,105,252,242,88,18,73,170,244,252,126,29,0,0,0,0,0,89,180,180,37,0,0,0,0,0,0,0,0,231,252,245,205,216,252,252,252,124,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,207,252,252,252,252,178,116,36,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,93,143,121,23,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
result = clf.predict([myNumber])
print("이 숫자는 -->", result, "입니다. 단,", score*100, "%의 확률입니다.")     # 퍼센트를 알려주어야 함

